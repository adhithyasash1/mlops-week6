# .github/workflows/cd.yml
name: CD - Deploy Iris API to K8s

on:
  push:
    branches:
      - main # Trigger deployment on push to main

env:
  # GCP and GKE details
  GCP_PROJECT_ID: ${{ secrets.GCP_PROJECT_ID }}
  GKE_CLUSTER: ${{ secrets.GKE_CLUSTER }}
  GKE_ZONE: ${{ secrets.GKE_ZONE }}

  # Google Artifact Registry details
  GAR_LOCATION: us-central1 # Change to your registry's location
  REPOSITORY: my-repo # Change to your repository name in GAR
  IMAGE_NAME: iris-api

jobs:
  build-and-deploy:
    name: Build and Deploy to GKE
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up CML
        uses: iterative/setup-cml@v2

      - name: Authenticate to Google Cloud
        uses: google-github-actions/auth@v2
        with:
          credentials_json: ${{ secrets.GCP_SA_KEY }}

      - name: Configure Docker to use Google Cloud credentials
        run: gcloud auth configure-docker ${{ env.GAR_LOCATION }}-docker.pkg.dev

      - name: Set up Kubeconfig
        uses: google-github-actions/get-gke-credentials@v2
        with:
          cluster_name: ${{ env.GKE_CLUSTER }}
          location: ${{ env.GKE_ZONE }}

      - name: Build and Push Docker Image
        run: |
          # Define the full image tag using the registry path and Git SHA
          IMAGE_TAG="${{ env.GAR_LOCATION }}-docker.pkg.dev/${{ env.GCP_PROJECT_ID }}/${{ env.REPOSITORY }}/${{ env.IMAGE_NAME }}:${{ github.sha }}"
          
          # Build the image
          docker build -t $IMAGE_TAG .
          
          # Push the image
          docker push $IMAGE_TAG
          
          # Make the image tag available to subsequent steps
          echo "IMAGE_TAG=$IMAGE_TAG" >> $GITHUB_ENV

      - name: Deploy to Kubernetes
        run: |
          # Replace the placeholder in the deployment manifest with the new image tag
          sed -i "s|__IMAGE_TAG__|${{ env.IMAGE_TAG }}|g" k8s/deployment.yaml
          
          # Apply the updated Kubernetes manifests
          kubectl apply -f k8s/

      - name: Create CML Report
        env:
          # Your repo's token is needed to post a comment
          repo_token: ${{ secrets.GITHUB_TOKEN }}
        run: |
          # Wait for the LoadBalancer to get an external IP
          echo "Waiting for external IP..."
          sleep 60
          
          # Fetch the external IP of the service
          SERVICE_IP=$(kubectl get service iris-service -o jsonpath='{.status.loadBalancer.ingress[0].ip}')
          
          # Write the CML report in markdown
          echo "ðŸš€ Deployment successful!" > report.md
          echo "App deployed to Kubernetes and is available at: [http://${SERVICE_IP}](http://${SERVICE_IP})" >> report.md
          echo "Image tag: ${{ env.IMAGE_TAG }}" >> report.md
          
          # Post the comment on the commit
          cml comment create report.md
